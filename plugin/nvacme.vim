if exists('g:loaded_nvacme')
  finish
endif

let g:loaded_nvacme = 1
" nvacme_pathchars are the characters that are considered path of a valid
" path. These are used by OpenPathUnderCursor to determine the extent of the
" path under the cursor.
let g:nvacme_pathchars = '-~/[a-z][A-Z].:[0-9]_'

let s:nvacme_path = expand('<sfile>:p:h') . '/nvacme' 

function! s:RequireNvacme(host) abort
  " 'nvacme' is the binary created by compiling the program.
  " If '-logpanic' is specified, panics in the binary are logged to
  " /tmp/nvacme.panic
  return jobstart([s:nvacme_path], {'rpc': v:true})
  "return jobstart([s:nvacme_path,'-logpanic'], {'rpc': v:true})
endfunction

call remote#host#Register('nvacme', 'x', function('s:RequireNvacme'))

vmap <M-RightMouse> :call OpenSelectedPath()<CR>
nmap <M-RightMouse> :call OpenPathUnderCursor()<CR>
nmap <M-]> :call OpenPathUnderCursor()<CR>

" The following lines are generated by running the program
" command line flag --manifest nvacme
call remote#host#RegisterPlugin('nvacme', '0', [
\ {'type': 'function', 'name': 'OpenPathUnderCursor', 'sync': 1, 'opts': {}},
\ {'type': 'function', 'name': 'OpenSelectedPath', 'sync': 1, 'opts': {}},
\ ])

